# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller and Binary builds
*.manifest
*.spec
pyinstaller_env/
requirements_pyinstaller.txt
*_binary*
ltmc_binary*

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
Pipfile.lock

# poetry
poetry.lock

# pdm
.pdm.toml

# PEP 582
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments and Virtual Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
# Additional venv patterns
*/venv/
**/venv/
.virtualenv/
virtualenv/
.conda/
conda-env/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
.idea/

# VS Code
.vscode/

# Claude Code internal files (NEVER commit these)
.claude/

# Cursor IDE files (NEVER commit these)
.cursor/

# ===================================
# LTMC Specific Files
# ===================================

# Database files
ltmc.db*
ltmc_chat_log.db*
ltms_memory.db*
*.sqlite
*.sqlite3
*.db
data/*.db
data/*.sqlite*

# Vector indices
faiss_index*
data/faiss_index*
dummy_index*
test_*_faiss_index*
*.faiss
*.index

# Process ID files  
*.pid
ltmc_*.pid
redis_*.pid
redis-ltmc/*.pid

# Log files
logs/
*.log

# Configuration files (keep examples)
config/*.env
config/.env
.env
*.env
ltmc_config.env
!config/*.env.example
!*.env.example

# Redis data and config
redis_data/
redis_config/*.conf
!redis_config/*.conf.example

# Neo4j standalone instance
neo4j-standalone/

# ===================================
# Test and Development Artifacts (EXCLUDE FROM PRODUCTION)
# ===================================

# Entire test directory - not needed for production
tests/
test/

# Development and utility directories - not needed for production
jenkins_validation_scripts/
backup/
backups/
backup_md_cleanup/
misc/
logs/
data/
config/
infrastructure/
examples/

# Documentation directory with temporary/development files
docs/
# Exception: Keep only essential user-facing documentation 
!docs/CONTRIBUTING.md
!docs/guides/

# Test result files
*_test_results_*.json
*_results_*.json
comprehensive_*.json
mcp_test_results_*.json
ltmc_*_results_*.json
*_validation_*.json
dynamic_method_*.json

# Temporary test files
test_stdio_*
temp_*
tmp_*
debug_*
*_test.py
*_tdd.py

# Node.js (from MCP SDK installations)
node_modules/
package.json
package-lock.json
npm-debug.log*

# ===================================
# System and Editor Files
# ===================================

# Temporary files
*.tmp
*.temp
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Backup files
*.bak
*.backup
*.old
*_backup.*
*_new.*

# Archive files (for organized storage)
archive/results/*.json
archive/backups/*

# ===================================
# Development Tools
# ===================================

# Performance monitoring
performance_*.txt
benchmark_*.json

# Cleanup scripts and temporary files
cleanup_*.log
cleanup_*.sh
reorganize_*.log
reorganize_*.sh
temp_*.sh

# ===================================
# Internal/Private Documents (NEVER COMMIT)
# ===================================

# Claude Code project instructions
CLAUDE.md

# Internal planning documents
*_INTEGRATION_PLAN.md
*_ANALYSIS.md
TASKMASTER_*.md
MEMORY_BANK_*.md

# Research and planning docs
docs/planning/
planning/
research/
internal/

# Any files with "internal" in the name
*internal*
*INTERNAL*

# Future planning directory (private documentation)
future/

# Development and utility scripts (not production code)
*.py.bak
run_*.py
test_*.py
validate_*.py
comprehensive_*.py
diagnostic_*.py
debug_*.py
ltmc_portable_validation.py
*_validation.py
py_code_graph.py

# ===================================
# IMPORTANT: WHAT SHOULD BE COMMITTED
# ===================================
#
# COMMIT THESE (Production Code & Essential Documentation Only):
# - README.md (main project documentation)
# - DEPLOYMENT.md (deployment instructions)
# - TECH_STACK.md (technical stack information)
# - STATUS.md (current project status)
# - CHANGELOG.md (version history)
# - QUICK_START_GUIDE.md (user getting started guide)
# - ARCHITECTURE_OVERVIEW.md (system architecture)
# - ORCHESTRATION.md (orchestration documentation)
# - PLAN.md (project roadmap)
# - ltms/ (all production source code in ltms directory)
# - examples/ (usage examples if any)
# - requirements.txt, setup.py, pyproject.toml (package configuration)
# - .gitignore, LICENSE (repository configuration)
# - Jenkinsfile* (CI/CD pipeline configuration)
#
# DO NOT COMMIT:
# - tests/ directory (all test files excluded from production)
# - backup_md_cleanup/ directory (organized backup files)
# - Temporary analysis documents and reports
# - Diagnostic and debugging files  
# - Database files and indices
# - Configuration files with secrets
# - Build artifacts and binaries
# - IDE and editor configuration
# - Backup and temporary files
# - Development utilities and validation scripts
# - Session logs and implementation documentation
#

# ===================================
# Build Artifacts and Binary Files
# ===================================

# Binary distribution files
dist/
build/
*.bin
*.exe
ltmc_minimal*
ltmc_optimized*

# Build scripts for binaries
build_*_binary.sh
build_ltmc_binary.sh

# Rust build artifacts (if any)
target/
Cargo.lock
ltmc-rust/

# ===================================
# Documentation and Analysis Files (EXCLUDE FROM PRODUCTION)
# ===================================

# Backup directory with all non-essential documentation
backup_md_cleanup/

# Temporary analysis and diagnostic documents  
*_ANALYSIS.md
*_REPORT.md  
*_INVESTIGATION*.md
*_DIAGNOSTIC*.md
*_DAMAGE_ASSESSMENT*.md
*_STATUS_REPORT.md
*_ERROR_LOG.md
*_COMPLETE_*.md
*_SYNCHRONIZATION_*.md
*_COMPETITIVE_*.md
*_STRATEGIC_*.md
*_MIGRATION_*.md
*_IMPLEMENTATION_SESSION.md
*_COMPREHENSIVE_*.md
*_VALIDATION*.md
*_EVIDENCE*.md
*_TERMINAL_LOGS.md
*_SYNTHESIS.md
*_MANUAL*.md
*_GUIDE_*.md
*_TODO_*.md
*_PLAN_*.md
*_SESSION*.md
*_SUMMARY*.md

# Specific temporary documents that should not be committed
JENKINS_GROOVY_REFACTOR_TDD_PLAN.md
JENKINS_MCP_INTEGRATION_TEST_REPORT.md
LTMC_ASYNC_MEMORY_ACTION_FIX_DOCUMENTATION.md
LTMC_ATOMIC_SYNCHRONIZATION_COMPLETE_READY_FOR_TESTING.md
LTMC_Competitive_Analysis_Report_2025.md
LTMC_DATABASE_SYNC_FIX_STEP_BY_STEP_GUIDE.md
LTMC_PostgreSQL_Qdrant_Migration_Analysis.md
LTMC_SYNCHRONIZATION_ARCHITECTURE_RECOMMENDATIONS.md
DATA_SYNCHRONIZATION_COMPLETE_SUCCESS.md
MCP_FastAPI_Event_Loop_Conflict_Research.md
ChatGPT_Agent_Coordination_Strategic_Analysis.md

# Test artifacts and diagnostic files
test_*_implementation.py
test_*_validation.py
*_test_report.md
*_diagnostic*.py
*_diagnostic*.json
agent_coordination_diagnostic*
ltmc_jenkins_mcp_test.py

# Backup files with dates
*.backup.*
*_backup_*

# Web scraping and temporary files
cookies.txt
login.html
*.html

# Jenkins integration temporary files  
jenkins_token_generation_results.json
jenkins_mcp_test_configuration.json
jenkins_api_token_programmatic_solution.py

# Test runner files (keep main test source only)
test_agent_handoff_coordinator.py
test_all_ltmc_tools.py
test_collaborative_pattern_engine.py
test_collaborative_system_integration.py
test_coordination_direct.py
test_cross_agent_memory_handler.py
test_faiss_compatibility_fix.py
test_pattern_learning.py
test_shared_session_manager.py
test_workflow_audit_system.py

# Data recovery and script artifacts
scripts/data_recovery_audit.py

# Docker/Deployment (keep source configs only)
monitoring/
k8s/
deployment/

# Generated files
=*
registry_validation.py
simple_registry_validation.py

# Any numbered or versioned temp files  
*_v[0-9]*
*_backup_*
*_[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]*

# Old shell script artifacts
*.sh.backup
run_*.sh
setup_*.sh

# Session continuation files and chat logs
*-continue*.txt
*-this-session-is-being-continued*.txt
chat.*.txt

# Visualization and diagram files (development artifacts)
*.dot
*.png
*.svg
code_graph*

# Example and demonstration files
examples/unified_query_demo.py
*_demo.py

# Migration and change tracking files
migration_plan_*.md
*_change_history.md
store_method_imports_mapping.md

# UV environment and alternative package managers
.venv-uv/
start_*.sh