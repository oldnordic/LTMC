[
  {
    "content": "Implement Domain Discovery Service for autonomous domain detection",
    "status": "completed",
    "priority": "high",
    "id": "1"
  },
  {
    "content": "Create Bootstrap & Configuration Service for dynamic domain setup",
    "status": "completed",
    "priority": "high",
    "id": "2"
  },
  {
    "content": "Integrate DirectorAgent with existing PromptEngineering service and domain discovery",
    "status": "completed",
    "priority": "high",
    "id": "3"
  },
  {
    "content": "Phase 1: Create Current State Architecture Diagram mapping 157 interdependent files",
    "status": "completed",
    "priority": "high",
    "id": "6"
  },
  {
    "content": "Phase 1: Conduct Agent Sprawl Review - categorize 40+ agent files into active/legacy/support",
    "status": "in_progress",
    "priority": "high",
    "id": "7"
  },
  {
    "content": "Phase 1: Define simplified Target Architecture with clear principles",
    "status": "pending",
    "priority": "high",
    "id": "8"
  },
  {
    "content": "Phase 2: Select and map Golden Path workflow end-to-end",
    "status": "pending",
    "priority": "high",
    "id": "9"
  },
  {
    "content": "Phase 2: Document integration points and contracts for Golden Path",
    "status": "pending",
    "priority": "high",
    "id": "10"
  },
  {
    "content": "Phase 3: Write detailed integration test case in plain English",
    "status": "pending",
    "priority": "high",
    "id": "11"
  },
  {
    "content": "Phase 3: Define specific success criteria for integration testing",
    "status": "pending",
    "priority": "high",
    "id": "12"
  },
  {
    "content": "Add meta-learning capabilities to learning_feedback_loop.py",
    "status": "pending",
    "priority": "medium",
    "id": "4"
  },
  {
    "content": "Rename CoderAgent to SynthesisAgent to reflect multi-domain role",
    "status": "pending",
    "priority": "low",
    "id": "5"
  }
]