# FirstSpirit Local Agent Development Rules

## Core Architecture Principles
- Build modular, loosely coupled components
- Use async/await for all I/O operations
- Implement comprehensive error handling with custom exceptions
- Follow type hints for all Python functions
- Use dataclasses for structured data
- Implement proper logging with structured messages

## Error Handling Pattern
```python
try:
    result = await some_operation()
    return {"success": True, "data": result}
except SpecificException as e:
    logger.error(f"Operation failed: {e}", exc_info=True)
    return {"success": False, "error": str(e), "error_type": "specific"}
except Exception as e:
    logger.exception("Unexpected error")
    return {"success": False, "error": str(e), "error_type": "unexpected"}
```

## FastAPI Patterns
```python
@app.post("/endpoint")
async def endpoint_handler(request: RequestModel) -> ResponseModel:
    try:
        # Validation
        if not request.field:
            raise HTTPException(400, "Field required")

        # Processing
        result = await service.process(request)

        # Response
        return ResponseModel(success=True, data=result)
    except Exception as e:
        raise HTTPException(500, f"Processing failed: {str(e)}")
```

## Testing Requirements
- Write tests first (TDD approach)
- Test coverage minimum: 80%
- Use pytest-asyncio for async tests
- Mock external dependencies
- Test both success and failure scenarios
```
