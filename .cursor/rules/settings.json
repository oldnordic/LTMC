// .cursor/settings.json - Configure rule priorities and behavior

{
    "rules": {
      "priority": [
        "smart-refactoring-enforcement.mdc",
        "smart-refactoring-universal.mdc", 
        "smart-refactoring-python.mdc",
        "smart-refactoring-typescript.mdc",
        "smart-refactoring-java.mdc"
      ],
      "enforcement": {
        "strictMode": true,
        "autoReject": [
          "noqa",
          "eslint-disable", 
          "SuppressWarnings",
          "any-type-usage",
          "global-disable"
        ],
        "requireExplanation": true,
        "requireBeforeAfter": true
      }
    },
    "quality": {
      "minimumImprovementRequired": true,
      "functionalityPreservation": "mandatory",
      "documentationRequired": true,
      "testingAfterRefactor": "recommended"
    },
    "languages": {
      "python": {
        "maxLineLength": 88,
        "maxFunctionLength": 30,
        "maxNestingDepth": 3,
        "requireTypeHints": true,
        "requireDocstrings": true
      },
      "typescript": {
        "maxLineLength": 100,
        "maxFunctionLength": 25,
        "strictTypes": true,
        "noAnyTypes": true
      },
      "java": {
        "maxLineLength": 120,
        "maxMethodLength": 30,
        "maxParametersPerMethod": 4,
        "requireJavaDoc": true
      }
    }
  }
  
  // .cursor/prompts.json - Custom prompts for smart refactoring
  
  {
    "smartRefactoring": {
      "analysisPrompt": "Before fixing this issue, analyze: 1) What is the root cause? 2) How can we improve the overall code structure? 3) What would make this code more maintainable?",
      "solutionPrompt": "Propose a solution that: 1) Fixes the root cause 2) Improves code quality 3) Maintains or enhances functionality 4) Follows best practices for {language}",
      "rejectionPrompt": "This solution uses a quick fix approach. Instead, please: 1) Extract methods to reduce complexity 2) Improve naming and structure 3) Add proper error handling 4) Ensure the fix improves overall code quality"
    }
  }